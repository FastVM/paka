
syntax 'if cond then 'else else {
    magic "if" (cond, _ -> then, _ -> else) 0
}

syntax 'if cond then {
    magic "if" (cond, _ -> then, _ -> ()) 0
}

syntax 'less a b {
    magic "greater" (b, a)
}

is_prime = num -> {
    next = arg -> if (num % arg == 0) {
            false
        } else {
            if (less num (arg * arg)) {
                true
            } else {
                next (arg + 2)
            }
        }
    if (num % 2 == 0) {
        false
    } else {
        if (less num 2) {
            false
        } else {
            next 3
        }
    }
}

primes = cb min max -> {
    next = n -> if (less n max) {
        if (is_prime n) {
            cb n
        }
        next (n + 1)
    }
    next min
}

all_primes = cb step times -> {
    cb 2
    cb 3
    next = n -> if (less n times) {
        await primes cb (step * n) (step * n + step) 
        next (n + 1)
    }
    next 0
}

count = 0
counter = v -> {
    count = count + 1
}
all_primes counter 100 1000
print count