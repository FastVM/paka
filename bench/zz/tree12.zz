def bottom_up_tree item
                   depth
    if != depth
          0
       do var i
              + item
                item
          var left
              rec - i
                    1
                  - depth 
                    1
          var right
              rec i
                  - depth
                    1
          array item
                left
                right
       array item
def item_check tree
    if != length tree
          1
       + index tree
               0
         - rec index tree 
                     1
           rec index tree
                     2
       index tree
             0
def pow2 n
    if == n
          0
       1
       * rec - n
               1
         2
var n
    12
var mindepth
    4
var maxdepth
    + mindepth
      2
set maxdepth
    if < maxdepth
         n
       n
       maxdepth
var stretchdepth
    + maxdepth
      1
var tree
    bottom_up_tree 0
                   stretchdepth
println item_check tree
var llt
    bottom_up_tree 0
                   maxdepth
var depth
    mindepth
while < depth
        + maxdepth
          1
      do var iters
             pow2 + - maxdepth
                      depth
                    mindepth
         var check
             0
         var checks
             0
         while < check 
                 iters
               do set tree
                      bottom_up_tree 1
                                     depth
                  set checks
                      + checks
                        item_check tree
                  set tree
                      bottom_up_tree - 0
                                       1
                                     depth
                  set checks
                      + checks
                        item_check tree
                  set check
                      + check
                        1
         println checks
         set depth
             + depth
               2
println item_check llt