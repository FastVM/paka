name = {};

name.from = lambda (val) {
    if (sys.typeof(val) == "string") {
        ret = {
            "name": val,
        };
        return tab.meta.set(ret, name);
    };
    metatable = tab.meta.get(name);
    if (metatable == name) {
        return val;
    };
    meta_name = metatable.name;
    if (name.is(meta_name)) {
        return meta_name;
    };
    return name.from(meta_name(val));
};

name.str = lambda(self) {
    return self.name;
};

name.is = lambda(val) {
    if (sys.typeof(val) != "table") {
        return false;
    };
    return tab.meta.get(val) == name;
};

def greet(person) {
    sys.enforce(name.is(person), "not a name: " ~ str.from(person));
    return "Hello " ~ str.from(person);
};

bob = name.from("Bob");
io.print(bob);
io.print(greet(bob));