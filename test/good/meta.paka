pair_ops = {};

def cons(car, cdr) {
    pair = {
        "car": car,
        "cdr": cdr
    };
    return tab.meta.set(pair, pair_ops);
};

pair_ops.str = lambda (self) {
    return "(" ~ str.from(self.car) ~ ", " ~ str.from(self.cdr) ~ ")";
};

pair_ops.add = lambda(self, other) {
    return cons(self.car + other.car, self.cdr + other.cdr);
};

one_two = cons(1, 2);
io.print(one_two);
two_four = one_two + one_two;
io.print(two_four);
