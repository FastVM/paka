

import("../lang/io.paka")
import("../lang/file.paka")

import("macros.paka")
import("strs.paka")
import("stream.paka")
import("paka/lex.paka")
import("paka/read.paka")
import("emit.paka")

def main(argv) {
    run = false
    outfile = "exec.bc"
    srcfile = none
    rest = []
    i = 0
    while i < length(argv) {
        arg = argv[i]
        if run {
            rest ~= [arg]
            i = i + 1
        } else {
            if arg[0] == '-' {
                if arg[1] == '-' {
                    run = true
                } 
                if arg[1] == 'o' {
                    i = i + 1
                    outfile = argv[i]
                }
                if arg[1] == 'e' {
                    i = i + 1
                    tokens = paka_tokenize(argv[i])
                    ast1 = paka_parse(tokens)
                    ast2 = [vm.ast.do, ast1]
                    bc = emit(ast2, ['/'])
                    i = i + 1
                    while i < length(argv) {
                        rest ~= [argv[i]]
                        i = i + 1
                    }
                    exec(bc, rest)
                    return none
                }
            } else {
                if srcfile != none {
                    puts("only one source can be provided")
                    exit
                }
                srcfile = arg
            }
            i = i + 1
        }
    }
    if srcfile == none {
        puts("no sources provided")
        exit
    }
    src = read(srcfile)
    if src == none {
        puts("cannot read file")
        exit
    }
    tokens = paka_tokenize(src)
    ast = paka_parse(tokens)
    bc = emit(ast, srcfile)
    if run {
        exec(bc, rest)
    } else {
        dump(outfile, bc)
    }
}

main(args)
