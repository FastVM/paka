# returns 1 if positive, -1 if negative, 0 otherwise
def sign(x) {
    if x > 0 {
        return 1
    }
    if x < 0 {
        return 0-1
    }
    return 0
}

# absolute value of a number
def abs(x) {
    if x < 0 {
        return 0-x
    } else {
        return x
    }
}

# range from A to B with step N, including A, not including B.
def range(start, end, step) {
    size = (end - start) / step
    
    if size == 0 {
        return [] 
    } 
    if size == 1 {
        return [start]
    }
    if sign(step) != sign(end - start) {
        return []
    }
    
    mid = start + (size / 2) * step
    lo = range(start, mid, step)
    hi = range(mid,   end, step)
    return lo ~ hi
}

# computes the factorial
def factorial(x) {
    result = 1
    term = 1
    while term < x {
        term = term + 1
        result = result * term
    }
    return result
}

# calculates greatest common divisor between a and b
def gcd(a, b) {
    if b == 0 {
        return a
    } else {
        return gcd(b, a % b)
    }
}

# non-recursive fibonacci: 0, 1, 1, 2, 3, 5, ...
def fib_iter(n) {
    a = 0
    b = 1
    i = 0
    while i < n {
        tmp = a + b
        b = a
        a = tmp
        i = i + 1
    }
    return a
}

# recursive power of an integer
def pow(x, n) {
    if n <= 0 {
        return 1
    } else {
        return x * pow(x, n - 1)
    }
}
