
def stream_new(src) {
    return [src, 0]
}

def stream_has_data(src) {
    if src[1] < length(src[0]) {
        return 1
    } else {
        return 0
    }
}

def stream_peek(src) {
    if stream_has_data(src) {
        return src[0][src[1]]
    } else {
        return 0
    }
}

def stream_skip1(src) {
    if stream_has_data(src) {
        src[1] = src[1] + 1
    }
}

def stream_skip(src, n) {
    i = 0
    while i < n {
        stream_skip1(src)
        i = i + 1
    }
}

def stream_read(src) {
    ret = stream_peek(src)
    stream_skip1(src)
    return ret
}

def stream_starts_swith(src, items) {
    if length(items) + src[1] > length(src[0]) {
        return 0
    }
    i = 0
    while i < length(items) {
        if items[i] != src[0][src[1] + i] {
            return 0
        }
        i = i + 1
    }
    return 1
}
